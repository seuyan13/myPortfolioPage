{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar histogram_1 = __importDefault(require(\"@vibrant/image/lib/histogram\"));\nvar SIGBITS = 5;\nvar RSHIFT = 8 - SIGBITS;\nvar VBox = /** @class */function () {\n  function VBox(r1, r2, g1, g2, b1, b2, histogram) {\n    this.histogram = histogram;\n    this._volume = -1;\n    this._count = -1;\n    // NOTE: dimension will be mutated by split operation.\n    //       It must be specified explicitly, not from histogram\n    this.dimension = {\n      r1: r1,\n      r2: r2,\n      g1: g1,\n      g2: g2,\n      b1: b1,\n      b2: b2\n    };\n  }\n  VBox.build = function (pixels) {\n    var h = new histogram_1.default(pixels, {\n      sigBits: SIGBITS\n    });\n    var rmin = h.rmin,\n      rmax = h.rmax,\n      gmin = h.gmin,\n      gmax = h.gmax,\n      bmin = h.bmin,\n      bmax = h.bmax;\n    return new VBox(rmin, rmax, gmin, gmax, bmin, bmax, h);\n  };\n  VBox.prototype.invalidate = function () {\n    this._volume = this._count = -1;\n    this._avg = null;\n  };\n  VBox.prototype.volume = function () {\n    if (this._volume < 0) {\n      var _a = this.dimension,\n        r1 = _a.r1,\n        r2 = _a.r2,\n        g1 = _a.g1,\n        g2 = _a.g2,\n        b1 = _a.b1,\n        b2 = _a.b2;\n      this._volume = (r2 - r1 + 1) * (g2 - g1 + 1) * (b2 - b1 + 1);\n    }\n    return this._volume;\n  };\n  VBox.prototype.count = function () {\n    if (this._count < 0) {\n      var _a = this.histogram,\n        hist = _a.hist,\n        getColorIndex = _a.getColorIndex;\n      var _b = this.dimension,\n        r1 = _b.r1,\n        r2 = _b.r2,\n        g1 = _b.g1,\n        g2 = _b.g2,\n        b1 = _b.b1,\n        b2 = _b.b2;\n      var c = 0;\n      for (var r = r1; r <= r2; r++) {\n        for (var g = g1; g <= g2; g++) {\n          for (var b = b1; b <= b2; b++) {\n            var index = getColorIndex(r, g, b);\n            c += hist[index];\n          }\n        }\n      }\n      this._count = c;\n    }\n    return this._count;\n  };\n  VBox.prototype.clone = function () {\n    var histogram = this.histogram;\n    var _a = this.dimension,\n      r1 = _a.r1,\n      r2 = _a.r2,\n      g1 = _a.g1,\n      g2 = _a.g2,\n      b1 = _a.b1,\n      b2 = _a.b2;\n    return new VBox(r1, r2, g1, g2, b1, b2, histogram);\n  };\n  VBox.prototype.avg = function () {\n    if (!this._avg) {\n      var _a = this.histogram,\n        hist = _a.hist,\n        getColorIndex = _a.getColorIndex;\n      var _b = this.dimension,\n        r1 = _b.r1,\n        r2 = _b.r2,\n        g1 = _b.g1,\n        g2 = _b.g2,\n        b1 = _b.b1,\n        b2 = _b.b2;\n      var ntot = 0;\n      var mult = 1 << 8 - SIGBITS;\n      var rsum = void 0;\n      var gsum = void 0;\n      var bsum = void 0;\n      rsum = gsum = bsum = 0;\n      for (var r = r1; r <= r2; r++) {\n        for (var g = g1; g <= g2; g++) {\n          for (var b = b1; b <= b2; b++) {\n            var index = getColorIndex(r, g, b);\n            var h = hist[index];\n            ntot += h;\n            rsum += h * (r + 0.5) * mult;\n            gsum += h * (g + 0.5) * mult;\n            bsum += h * (b + 0.5) * mult;\n          }\n        }\n      }\n      if (ntot) {\n        this._avg = [~~(rsum / ntot), ~~(gsum / ntot), ~~(bsum / ntot)];\n      } else {\n        this._avg = [~~(mult * (r1 + r2 + 1) / 2), ~~(mult * (g1 + g2 + 1) / 2), ~~(mult * (b1 + b2 + 1) / 2)];\n      }\n    }\n    return this._avg;\n  };\n  VBox.prototype.contains = function (rgb) {\n    var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2];\n    var _a = this.dimension,\n      r1 = _a.r1,\n      r2 = _a.r2,\n      g1 = _a.g1,\n      g2 = _a.g2,\n      b1 = _a.b1,\n      b2 = _a.b2;\n    r >>= RSHIFT;\n    g >>= RSHIFT;\n    b >>= RSHIFT;\n    return r >= r1 && r <= r2 && g >= g1 && g <= g2 && b >= b1 && b <= b2;\n  };\n  VBox.prototype.split = function () {\n    var _a = this.histogram,\n      hist = _a.hist,\n      getColorIndex = _a.getColorIndex;\n    var _b = this.dimension,\n      r1 = _b.r1,\n      r2 = _b.r2,\n      g1 = _b.g1,\n      g2 = _b.g2,\n      b1 = _b.b1,\n      b2 = _b.b2;\n    var count = this.count();\n    if (!count) return [];\n    if (count === 1) return [this.clone()];\n    var rw = r2 - r1 + 1;\n    var gw = g2 - g1 + 1;\n    var bw = b2 - b1 + 1;\n    var maxw = Math.max(rw, gw, bw);\n    var accSum = null;\n    var sum;\n    var total;\n    sum = total = 0;\n    var maxd = null;\n    if (maxw === rw) {\n      maxd = 'r';\n      accSum = new Uint32Array(r2 + 1);\n      for (var r = r1; r <= r2; r++) {\n        sum = 0;\n        for (var g = g1; g <= g2; g++) {\n          for (var b = b1; b <= b2; b++) {\n            var index = getColorIndex(r, g, b);\n            sum += hist[index];\n          }\n        }\n        total += sum;\n        accSum[r] = total;\n      }\n    } else if (maxw === gw) {\n      maxd = 'g';\n      accSum = new Uint32Array(g2 + 1);\n      for (var g = g1; g <= g2; g++) {\n        sum = 0;\n        for (var r = r1; r <= r2; r++) {\n          for (var b = b1; b <= b2; b++) {\n            var index = getColorIndex(r, g, b);\n            sum += hist[index];\n          }\n        }\n        total += sum;\n        accSum[g] = total;\n      }\n    } else {\n      maxd = 'b';\n      accSum = new Uint32Array(b2 + 1);\n      for (var b = b1; b <= b2; b++) {\n        sum = 0;\n        for (var r = r1; r <= r2; r++) {\n          for (var g = g1; g <= g2; g++) {\n            var index = getColorIndex(r, g, b);\n            sum += hist[index];\n          }\n        }\n        total += sum;\n        accSum[b] = total;\n      }\n    }\n    var splitPoint = -1;\n    var reverseSum = new Uint32Array(accSum.length);\n    for (var i = 0; i < accSum.length; i++) {\n      var d = accSum[i];\n      if (splitPoint < 0 && d > total / 2) splitPoint = i;\n      reverseSum[i] = total - d;\n    }\n    var vbox = this;\n    function doCut(d) {\n      var dim1 = d + '1';\n      var dim2 = d + '2';\n      var d1 = vbox.dimension[dim1];\n      var d2 = vbox.dimension[dim2];\n      var vbox1 = vbox.clone();\n      var vbox2 = vbox.clone();\n      var left = splitPoint - d1;\n      var right = d2 - splitPoint;\n      if (left <= right) {\n        d2 = Math.min(d2 - 1, ~~(splitPoint + right / 2));\n        d2 = Math.max(0, d2);\n      } else {\n        d2 = Math.max(d1, ~~(splitPoint - 1 - left / 2));\n        d2 = Math.min(vbox.dimension[dim2], d2);\n      }\n      while (!accSum[d2]) d2++;\n      var c2 = reverseSum[d2];\n      while (!c2 && accSum[d2 - 1]) c2 = reverseSum[--d2];\n      vbox1.dimension[dim2] = d2;\n      vbox2.dimension[dim1] = d2 + 1;\n      return [vbox1, vbox2];\n    }\n    return doCut(maxd);\n  };\n  return VBox;\n}();\nexports.default = VBox;","map":{"version":3,"names":["histogram_1","__importDefault","require","SIGBITS","RSHIFT","VBox","r1","r2","g1","g2","b1","b2","histogram","_volume","_count","dimension","build","pixels","h","default","sigBits","rmin","rmax","gmin","gmax","bmin","bmax","prototype","invalidate","_avg","volume","_a","count","hist","getColorIndex","_b","c","r","g","b","index","clone","avg","ntot","mult","rsum","gsum","bsum","contains","rgb","split","rw","gw","bw","maxw","Math","max","accSum","sum","total","maxd","Uint32Array","splitPoint","reverseSum","length","i","d","vbox","doCut","dim1","dim2","d1","d2","vbox1","vbox2","left","right","min","c2"],"sources":["../../../../packages/vibrant-quantizer-mmcq/src/vbox.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}