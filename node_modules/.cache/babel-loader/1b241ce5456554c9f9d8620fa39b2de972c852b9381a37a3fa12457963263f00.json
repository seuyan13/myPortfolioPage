{"ast":null,"code":"var _jsxFileName = \"/Users/seungwoonyang/Desktop/Study/DeveloperPortfolio/portfolio/src/components/ProjectSection/ProjectBrief.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./ProjectContainer.module.css\";\nimport { PlusCircle } from \"react-bootstrap-icons\";\nimport { ModalBoxContainer } from \"./ModalBoxContainer\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectBrief = _ref => {\n  _s();\n  let {\n    imgSrc,\n    title,\n    group,\n    date,\n    modalId\n  } = _ref;\n  const [showModal, setShowModal] = useState(false);\n  const [selectedModal, setSelectedModal] = useState(null);\n  const {\n    pathname\n  } = useLocation();\n  const [fullSizeImage, setFullSizeImage] = useState(null);\n  const openModal = modal => {\n    setSelectedModal(modal);\n    setShowModal(true);\n  };\n  const openFullSizeImage = imgSrc => {\n    setFullSizeImage(imgSrc);\n  };\n  useEffect(() => {\n    if (pathname !== \"/project\") {\n      setShowModal(false);\n    }\n  }, [pathname]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.projectBox,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.boxAndroid,\n        id: \"android\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.projectImg,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgSrc,\n            alt: \"img\",\n            className: \"img-fluid\",\n            onClick: () => openFullSizeImage(imgSrc)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.projectContent,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: styles.PTitle,\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.more,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.group,\n                  children: group\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 19\n                }, this), \" /\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.Date,\n                  children: date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.btnBox,\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => openModal(modalId),\n                  className: styles.projectBtn,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: /*#__PURE__*/_jsxDEV(PlusCircle, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 19\n                }, this), showModal && /*#__PURE__*/_jsxDEV(ModalBoxContainer, {\n                  setShowModal: setShowModal,\n                  selectedModal: selectedModal\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), fullSizeImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modalOverlay,\n      onClick: () => setFullSizeImage(null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.modalImage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: fullSizeImage,\n          alt: \"img\",\n          className: \"img-fluid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectBrief, \"UwZKQYVDRKny6Fpbz3ndlYhTczQ=\", false, function () {\n  return [useLocation];\n});\n_c = ProjectBrief;\nexport default ProjectBrief;\nvar _c;\n$RefreshReg$(_c, \"ProjectBrief\");","map":{"version":3,"names":["React","useState","useEffect","styles","PlusCircle","ModalBoxContainer","useLocation","jsxDEV","_jsxDEV","ProjectBrief","_ref","_s","imgSrc","title","group","date","modalId","showModal","setShowModal","selectedModal","setSelectedModal","pathname","fullSizeImage","setFullSizeImage","openModal","modal","openFullSizeImage","className","children","projectBox","boxAndroid","id","projectImg","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","projectContent","PTitle","more","Date","btnBox","projectBtn","modalOverlay","modalImage","_c","$RefreshReg$"],"sources":["/Users/seungwoonyang/Desktop/Study/DeveloperPortfolio/portfolio/src/components/ProjectSection/ProjectBrief.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./ProjectContainer.module.css\";\nimport { PlusCircle } from \"react-bootstrap-icons\";\nimport { ModalBoxContainer } from \"./ModalBoxContainer\";\nimport { useLocation } from \"react-router-dom\";\n\nconst ProjectBrief = ({ imgSrc, title, group, date, modalId }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [selectedModal, setSelectedModal] = useState(null);\n  const { pathname } = useLocation();\n  const [fullSizeImage, setFullSizeImage] = useState(null);\n\n  const openModal = (modal) => {\n    setSelectedModal(modal);\n    setShowModal(true);\n  };\n\n  const openFullSizeImage = (imgSrc) => {\n    setFullSizeImage(imgSrc);\n  };\n\n  useEffect(() => {\n    if (pathname !== \"/project\") {\n      setShowModal(false);\n    }\n  }, [pathname]);\n\n  return (\n    <div className=\"col-md-4\">\n      <div className={styles.projectBox}>\n        <div className={styles.boxAndroid} id=\"android\">\n          <div className={styles.projectImg}>\n            <img\n              src={imgSrc}\n              alt=\"img\"\n              className=\"img-fluid\"\n              onClick={() => openFullSizeImage(imgSrc)}\n            />\n          </div>\n          <div className={styles.projectContent}>\n            <div className=\"row\">\n              <div className=\"col-sm-8\">\n                <h2 className={styles.PTitle}>{title}</h2>\n                <div className={styles.more}>\n                  <span className={styles.group}>{group}</span> /{\" \"}\n                  <span className={styles.Date}>{date}</span>\n                </div>\n              </div>\n              <div className=\"col-sm-4\">\n                <div className={styles.btnBox}>\n                  <button\n                    onClick={() => openModal(modalId)}\n                    className={styles.projectBtn}\n                  >\n                    <span>\n                      <PlusCircle />\n                    </span>\n                  </button>\n                  {showModal && (\n                    <ModalBoxContainer\n                      setShowModal={setShowModal}\n                      selectedModal={selectedModal}\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {fullSizeImage && (\n        <div\n          className={styles.modalOverlay}\n          onClick={() => setFullSizeImage(null)}\n        >\n          <div className={styles.modalImage}>\n            <img src={fullSizeImage} alt=\"img\" className=\"img-fluid\" />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProjectBrief;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}